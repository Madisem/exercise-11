---
title: "exercise-11"
author: "Madina"
format: html
editor: visual
---

##  **Preliminaries**

-   Using the {tidyverse} `read_tsv()` function, load the “Mammal_lifehistories_v2.txt” dataset from [this URL](https://raw.githubusercontent.com/difiore/ada-datasets/main/Mammal_lifehistories_v2.txt) as a “tibble” named **d**. As discussed in class, this is dataset that compiles life history and other variables for over 1400 species of placental mammals from 17 different Orders.

-   Do a bit of exploratory data analysis with this dataset, e.g., using the {skimr} package. Which of the variables are categorical and which are numeric?

```{r}
library(tidyverse)
library(skimr)
f <- "Mammal_lifehistories_v2.txt"
d <- read_tsv(f, col_names = TRUE)
head(d)  
skim(d)
```

-   *Order, family, Genus, species are character; the rest 10 columns in numeric variables;*

#### **Step 1**

-   Replace all values of -999 (the authors’ code for missing data) with `NA`.

```{r}
d[d == -999] <- NA
skim(d)
```

*now p0,p25 do not have -999 values;*

#### **Step 2**

-   Drop the variables **litter size** and **refs**.

    ```{r}
    library(dplyr)
    d <- d |> select(-`litter size`, -refs) 
    skim(d)
    ```

#### **Step 3**

-   Log transform all of the other numeric variables.

```{r}
d<-d |> mutate(across(where(is.numeric), log))
skim(d)
```

*Now, in histogram the distribution of the values are different compared to non-log values;*

#### **Step 4**

-   Regress the (now log transformed) *age* \[**gestation(mo)**, **weaning(mo)**, **AFR(mo)** (i.e., age at first reproduction), and **max. life(mo)** (i.e., maximum lifespan)\] and *mass* \[**newborn(g)** and **wean mass(g)**\] variables on (now log transformed) overall body **mass(g)** and add the residuals to the dataframe as new variables \[**relGest**, **relWean**, **relAFR**, **relLife**, **relNewbornMass**, and **relWeaningMass**\].

```{r}
d$relGest <- residuals(lm(data = d, `gestation(mo)` ~ `mass(g)`, na.action = na.exclude))
d$relWean <- residuals(lm(data = d, `weaning(mo)` ~ `mass(g)`, na.action = na.exclude))
d$relAFR <- residuals(lm(data = d, `AFR(mo)` ~ `mass(g)`, na.action = na.exclude))
d$relLife <- residuals(lm(data = d, `max. life(mo)` ~ `mass(g)`, na.action = na.exclude))
d$relNewbornMass <- residuals(lm(data = d, `newborn(g)` ~ `mass(g)`, na.action = na.exclude))
d$relWeaningMass <- residuals(lm(data = d, `wean mass(g)` ~ `mass(g)`, na.action = na.exclude))
 
skim(d)
```

#### **Step 5**

-   Plot residuals of max lifespan (**relLife**) in relation to **Order**. Which mammalian orders have the highest residual lifespan?

-   Plot residuals of newborn mass (**relNewbornMass**) in relation to **Order**. Which mammalian orders have the have highest residual newborn mass?

-   Plot residuals of weaning mass (**relWeaningMass**) in relation to **Order**. Which mammalian orders have the have highest residual weaning mass?

> **NOTE:** There will be lots of missing data for the latter two variables!

```{r}
library(tidyr)
library(ggplot2)
d_drop <- drop_na(d, relLife, order)
ggplot(d_drop, aes( x = relLife, y = reorder(order, relLife, FUN = mean))) +
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", shape = 20, color = "red", size = 2)+
  labs(x = "Relative Max Lifespan (Residuals)", y = "Mammalian Order", title = "Relative Lifespan by Mammalian Order") +
  theme_minimal()
```

```{r}
d_drop |> group_by(order) |>
  summarize(mean_relLife = mean(relLife, na.rm = TRUE)) |>
  arrange(desc(mean_relLife))
```

*Primates has the highest residual lifespan!*

```{r}
d_nb <- drop_na(d, relNewbornMass, order)
ggplot(d_nb, aes( x = relNewbornMass, y = reorder(order, relNewbornMass, FUN = mean))) +
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", shape = 20, color = "red", size = 2)+
  labs(x = "Relative Newborn Mass (Residuals)", y = "Mammalian Order", title = "Relative Newborn Mass by Mammalian Order") +
  theme_minimal()
```

*Macroscelidea, cetacea orders have the highest residual newborn mass!*

```{r}
d_wn <- drop_na(d, relWeaningMass, order)
ggplot(d_wn, aes( x = relWeaningMass, y = reorder(order, relWeaningMass, FUN = mean))) +
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", shape = 20, color = "red", size = 2)+
  labs(x = "Relative Weaning Mass (Residuals)", y = "Mammalian Order", title = "Relative Weaning Mass by Mammalian Order") +
  theme_minimal()
```

*Perissodactyla order has the highest residual weaning mass!*

#### **Step 6**

-   Run models and a model selection process to evaluate what (now log transformed) variables best predict each of the two response variables, **max. life(mo)** and **AFR(mo)**, from the set of the following predictors: **gestation(mo)**, **newborn(g)**, **weaning(mo)**, **wean mass(g)**, **litters/year**, and overall body **mass(g)**.

> **HINT:** Before running models, winnow your dataset to drop rows that are missing the respective response variable or any of the predictors, e.g., by using `drop_na()`.

-   For each of the two response variables, indicate what is the best model overall based on AICc and how many models have a delta AICc of 4 or less?

-   What variables, if any, appear in all of this set of “top” models?

-   Calculate and plot the model-averaged coefficients and their CIs across this set of top models.

```{r}
d_new<- d |> drop_na(`max. life(mo)`, `gestation(mo)`,`newborn(g)`,`weaning(mo)`,`wean mass(g)`,`litters/year`,`mass(g)`)
m_null <- lm(data = d_new, `max. life(mo)` ~ 1)
add1(m_null, scope = .~. + `gestation(mo)`+`newborn(g)`+`weaning(mo)`+`wean mass(g)`+`litters/year`+`mass(g)`, test = "F")

#install.packages("https://cran.r-project.org/src/contrib/Archive/MuMIn/MuMIn_1.46.0.tar.gz", repos = NULL, type = "source")
#install.packages("MuMIn")
library(MuMIn)

  
m_full <- lm(data=d_new, `max. life(mo)` ~ `gestation(mo)`+`newborn(g)`+`weaning(mo)`+`wean mass(g)`+`litters/year`+`mass(g)`, na.action = na.fail)
(mods<- dredge(m_full))
summary(mods)
```
